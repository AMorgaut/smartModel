var assert = require('assert');var smodel = require('smodel');exports['test $class() return SmartClass instance'] = function () {    var module = {exports: {}};    assert.ok(smodel.$class(module, 'Contact') instanceof smodel.SmartClass);};exports['test SmartClass has $primary() method'] = function () {    var module = {exports: {}};    smodel.$class(module, 'Contact');    assert.ok(typeof smodel.$class(module, 'Contact').$primary === 'function');};exports['test SmartClass has $attr() method'] = function () {    var module = {exports: {}};    smodel.$class(module, 'Contact');    assert.ok(typeof smodel.$class(module, 'Contact').$attr === 'function');};exports['test SmartClass name applied'] = function () {    var module = {exports: {}};    smodel.$class(module, 'Contact');    assert.ok(module.exports.name === 'Contact');    assert.ok(module.exports.className === 'Contact');};exports['test SmartClass default collection name is className + "Collection"'] = function () {    var module = {exports: {}};    smodel.$class(module, 'Contact');    assert.ok(module.exports.collectionName === 'ContactCollection');    smodel.$class(module, 'Contact', null);    assert.ok(module.exports.collectionName === 'ContactCollection');    smodel.$class(module, 'Contact', null);    assert.ok(module.exports.collectionName === 'ContactCollection');};exports['test SmartClass custom collection name'] = function () {    var module = {exports: {}};    smodel.$class(module, 'Contact', 'Contacts');    assert.ok(module.exports.collectionName === 'Contacts');};exports['test SmartClass scope'] = function () {    var module = {exports: {}};    smodel.$class(module, 'Contact', 'Contacts', 'publicOnServer');    assert.ok(module.exports.scope === 'publicOnServer');};// AUTORUNif (require.main === module) {    require('test').run(exports);}console.content;